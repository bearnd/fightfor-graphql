---

# PostgreSQL variables

# Define the encrypted SQL password variable outside the nested structures due
# to the issue described in https://stackoverflow
# .com/questions/50770524/ansible-vault-inline-variable-with-to-nice-json
# -unexpected-templating-type-erro
sql_password: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  65353164626630373133623831373638383666366638663939616636663366323434393837393033
  3436356263343466303365376666336330656139376364370a623037653232316531383335313062
  35386438373536353330653233316264363636376432646135346634316566666534646161623435
  3534303538363433330a386434663861306362643632313939663939306365383664323335616363
  38323262323266316232313539663032386530653233306663393165643161643338646439646437
  3737393864313766633133346432346439613363623931316637

# PostgreSQL Server Settings.
postgresql_python_library: "python-psycopg2"

# PostgreSQL Databases.
postgresql_databases:
  - name: "fightfor"
    port: 5432
  - name: "test"
    port: 5432

# PostgreSQL Users.
postgresql_users:
  - name: "{{ system.user }}"
    password: "{{ sql_password }}"
    port: 5432

# PostgreSQL schemata.
postgresql_schemata:
  - clinicaltrials
  - pubmed
  - mesh
  - app

# PostgreSQL extensions.
postgresql_extensions:
  - pg_trgm
  - postgis

# Auth0 shared variables.
auth0_domain: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  34363234613261656238396161356432313061343461313962313866663532633035386562313136
  3336303236643566353363333563313666396566343736310a626662396239636539303265386130
  35633266383962646262653733306666643536613266393334323635323162646339393566613731
  6630336337396438320a633532396432336532336465353662356332303566393539316331643736
  36393634626333316133663432666239653433313731323732313332306635313231
auth0_jwks_url: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  36633665633035323538643132633737326131346464326134323866643637663836373766323365
  3130363638313536626135623537346266623237623832300a313238643130353033633766623631
  35656239383130383064323938393566653334633361383030646333643136326433373264346363
  6339663165633137650a303239643763666631613463346161333866653135653338613432376535
  36376362313539363766333830343465316435653239633961326537313361633032363530623733
  6435646362653834346630313131383532303164303330633035

# Auth0 development variables.
auth0_dev_audience: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  62383162633832633232303866356431616436656337326334356430653238633230323235336332
  3438643130363334383461623566303035633361663138360a643936333066626361346332336533
  62326134396437306265393630666463626338316337376533646563313934383836366637653835
  3966633863353435330a303731616664373363366464333439306530636563356363353631306261
  65326538303539646132353762373734313937383166626437373631653238336362
auth0_dev_client_id: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  32383933323537366630373733306537383539656335656263626363613961303239396536663033
  3538343433306266666631333034306338656662383966360a333334313966343836323764616461
  37363062663238636530653737386666313633306433636536326132323463623330393461646338
  3364623531346665390a343235316332643733323431323338613839393834333933363737393436
  31356239646165356464343832393031613136313731663762396536643935343162653932633835
  6631366166363832626430346135663536346233666332666332

# Auth0 production variables.
auth0_prod_audience: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  65663831386661643338646131356134313963386637326463323832396534313263636339646562
  3632656164313961633534653963316231383439306638610a393732343061343136393461326137
  64303436356533623535373465383735336566666237623236333038373633656435343237326336
  3639646139616131640a323966636466646231373166313762316461356235653264643731396138
  34633531343638636634633136366266303163623563313466643438353063363333
auth0_prod_client_id: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  64653330333630643266336434646138383736356333306532363766303630386165336537336131
  3732623661643133656333613663356562353235623231320a353764356163323631656265623137
  61303263643339353361663733393965373832363637353332653837343530663939623462613966
  6363643436623530370a303963626139393062666363656636363132653232306230356134343964
  66613666643631396233386633633861386263373862306238306561333533653135643734316534
  3866363035336535623736343561373861356534623832643339

# Sentry variables.
sentry_dsn: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  61366563346139376562666534623137663731643863626261313039346130323361366130306133
  6232653232396163353639306336616562313666386639300a363538356132396465646637656463
  38353437333539333134343532363230633830333565336364333065623830373966396539346238
  3936336130656634380a376633306530376265313935373564626337326631613235376138386431
  39326466623435656536363139303831323763353266313237313366363263343435613166643561
  35383539646261386662633763356638303030343666343461363736656533343832393263383731
  343433353134666165343466646137626539

# GitLab variables.
gitlab_deploy_token_username: "fightfor-graphql-deployer"
gitlab_deploy_token_password: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  33346233333238326630376638313766356164363937353137313532353238636661326632656233
  3131313139373061333638326437623730653566383136320a666532316365373735353134616464
  36363636306165326463363438663638303762633331343065363933616366323064613664306466
  3038633935656430300a656661343130346234633230353533373334313733303565386435663434
  65306533303266333138333635623265626133363863363863613830653564343230

project:
  name: "fightfor-graphql"

system:
  # User name.
  user: "ffgraphql"
  # User group.
  group: "ffgraphql"
  # Application directories.
  directories:
    config: "/etc/{{ project.name }}"
    share: "/usr/local/share/{{ project.name }}"
    run: "/var/run/{{ project.name }}"
    log: "/var/log/{{ project.name }}"
    virtual_env: "/usr/local/share/{{ project.name }}/venvs/{{ project.name }}"

# Application Configuration Settings.
config:
  test:
    # General Settings.
    logger_level: DEBUG

    # PostgreSQL Server Configuration Settings.
    sql_host: "192.168.0.12"
    sql_port: 5432
    sql_username: "{{ system.user }}"
    sql_password: "{{ sql_password }}"
    sql_db: "test"

    # Gunicorn Configuration Settings.
    gunicorn:
      host: "0.0.0.0"
      port: 5555
      workers: 1
      threads: 1
      worker_class: sync
      graceful_timeout: 120
      timeout: 130

    # Auth0 configuration settings.
    auth0:
      domain: "{{ auth0_domain }}"
      audience: "{{ auth0_dev_audience }}"
      jwks_url: "{{ auth0_jwks_url }}"
      client_id: "{{ auth0_dev_client_id }}"

    # Sentry configuration settings.
    sentry:
      dsn:

  dev:
    # General Settings.
    logger_level: DEBUG

    # PostgreSQL Server Configuration Settings.
    sql_host: "192.168.0.12"
    sql_port: 5432
    sql_username: "{{ system.user }}"
    sql_password: "{{ sql_password }}"
    sql_db: "fightfor"

    # Gunicorn Configuration Settings.
    gunicorn:
      host: "0.0.0.0"
      port: 5555
      workers: 1
      threads: 1
      worker_class: sync
      graceful_timeout: 120
      timeout: 130

    # Auth0 configuration settings.
    auth0:
      domain: "{{ auth0_domain }}"
      audience: "{{ auth0_dev_audience }}"
      jwks_url: "{{ auth0_jwks_url }}"
      client_id: "{{ auth0_dev_client_id }}"

    # Sentry configuration settings.
    sentry:
      dsn:

  prod:
    # General Settings.
    logger_level: INFO

    # PostgreSQL Server Configuration Settings.
    sql_host: "localhost"
    sql_port: 5432
    sql_username: "{{ system.user }}"
    sql_password: "{{ sql_password }}"
    sql_db: "fightfor"

    # Gunicorn Configuration Settings.
    gunicorn:
      host: "0.0.0.0"
      port: 5555
      workers: 4
      threads: 4
      worker_class: sync
      graceful_timeout: 120
      timeout: 130

    # Auth0 configuration settings.
    auth0:
      domain: "{{ auth0_domain }}"
      audience: "{{ auth0_prod_audience }}"
      jwks_url: "{{ auth0_jwks_url }}"
      client_id: "{{ auth0_prod_client_id }}"

    # Sentry configuration settings.
    sentry:
      dsn: "{{ sentry_dsn }}"
